--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="MAX 10" LPM_DECODES=12 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 16.1 cbx_cycloneii 2016:10:24:15:04:16:SJ cbx_lpm_add_sub 2016:10:24:15:04:16:SJ cbx_lpm_compare 2016:10:24:15:04:16:SJ cbx_lpm_decode 2016:10:24:15:04:16:SJ cbx_mgl 2016:10:24:15:05:03:SJ cbx_nadder 2016:10:24:15:04:16:SJ cbx_stratix 2016:10:24:15:04:16:SJ cbx_stratixii 2016:10:24:15:04:16:SJ  VERSION_END


-- Copyright (C) 2016  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Intel and sold by Intel or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_t8a
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1810w[1..0]	: WIRE;
	w_anode1819w[3..0]	: WIRE;
	w_anode1836w[3..0]	: WIRE;
	w_anode1846w[3..0]	: WIRE;
	w_anode1856w[3..0]	: WIRE;
	w_anode1866w[3..0]	: WIRE;
	w_anode1876w[3..0]	: WIRE;
	w_anode1886w[3..0]	: WIRE;
	w_anode1896w[3..0]	: WIRE;
	w_anode1908w[1..0]	: WIRE;
	w_anode1915w[3..0]	: WIRE;
	w_anode1926w[3..0]	: WIRE;
	w_anode1936w[3..0]	: WIRE;
	w_anode1946w[3..0]	: WIRE;
	w_anode1956w[3..0]	: WIRE;
	w_anode1966w[3..0]	: WIRE;
	w_anode1976w[3..0]	: WIRE;
	w_anode1986w[3..0]	: WIRE;
	w_data1808w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[11..0] = eq_wire[11..0];
	eq_wire[] = ( ( w_anode1986w[3..3], w_anode1976w[3..3], w_anode1966w[3..3], w_anode1956w[3..3], w_anode1946w[3..3], w_anode1936w[3..3], w_anode1926w[3..3], w_anode1915w[3..3]), ( w_anode1896w[3..3], w_anode1886w[3..3], w_anode1876w[3..3], w_anode1866w[3..3], w_anode1856w[3..3], w_anode1846w[3..3], w_anode1836w[3..3], w_anode1819w[3..3]));
	w_anode1810w[] = ( (w_anode1810w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1819w[] = ( (w_anode1819w[2..2] & (! w_data1808w[2..2])), (w_anode1819w[1..1] & (! w_data1808w[1..1])), (w_anode1819w[0..0] & (! w_data1808w[0..0])), w_anode1810w[1..1]);
	w_anode1836w[] = ( (w_anode1836w[2..2] & (! w_data1808w[2..2])), (w_anode1836w[1..1] & (! w_data1808w[1..1])), (w_anode1836w[0..0] & w_data1808w[0..0]), w_anode1810w[1..1]);
	w_anode1846w[] = ( (w_anode1846w[2..2] & (! w_data1808w[2..2])), (w_anode1846w[1..1] & w_data1808w[1..1]), (w_anode1846w[0..0] & (! w_data1808w[0..0])), w_anode1810w[1..1]);
	w_anode1856w[] = ( (w_anode1856w[2..2] & (! w_data1808w[2..2])), (w_anode1856w[1..1] & w_data1808w[1..1]), (w_anode1856w[0..0] & w_data1808w[0..0]), w_anode1810w[1..1]);
	w_anode1866w[] = ( (w_anode1866w[2..2] & w_data1808w[2..2]), (w_anode1866w[1..1] & (! w_data1808w[1..1])), (w_anode1866w[0..0] & (! w_data1808w[0..0])), w_anode1810w[1..1]);
	w_anode1876w[] = ( (w_anode1876w[2..2] & w_data1808w[2..2]), (w_anode1876w[1..1] & (! w_data1808w[1..1])), (w_anode1876w[0..0] & w_data1808w[0..0]), w_anode1810w[1..1]);
	w_anode1886w[] = ( (w_anode1886w[2..2] & w_data1808w[2..2]), (w_anode1886w[1..1] & w_data1808w[1..1]), (w_anode1886w[0..0] & (! w_data1808w[0..0])), w_anode1810w[1..1]);
	w_anode1896w[] = ( (w_anode1896w[2..2] & w_data1808w[2..2]), (w_anode1896w[1..1] & w_data1808w[1..1]), (w_anode1896w[0..0] & w_data1808w[0..0]), w_anode1810w[1..1]);
	w_anode1908w[] = ( (w_anode1908w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1915w[] = ( (w_anode1915w[2..2] & (! w_data1808w[2..2])), (w_anode1915w[1..1] & (! w_data1808w[1..1])), (w_anode1915w[0..0] & (! w_data1808w[0..0])), w_anode1908w[1..1]);
	w_anode1926w[] = ( (w_anode1926w[2..2] & (! w_data1808w[2..2])), (w_anode1926w[1..1] & (! w_data1808w[1..1])), (w_anode1926w[0..0] & w_data1808w[0..0]), w_anode1908w[1..1]);
	w_anode1936w[] = ( (w_anode1936w[2..2] & (! w_data1808w[2..2])), (w_anode1936w[1..1] & w_data1808w[1..1]), (w_anode1936w[0..0] & (! w_data1808w[0..0])), w_anode1908w[1..1]);
	w_anode1946w[] = ( (w_anode1946w[2..2] & (! w_data1808w[2..2])), (w_anode1946w[1..1] & w_data1808w[1..1]), (w_anode1946w[0..0] & w_data1808w[0..0]), w_anode1908w[1..1]);
	w_anode1956w[] = ( (w_anode1956w[2..2] & w_data1808w[2..2]), (w_anode1956w[1..1] & (! w_data1808w[1..1])), (w_anode1956w[0..0] & (! w_data1808w[0..0])), w_anode1908w[1..1]);
	w_anode1966w[] = ( (w_anode1966w[2..2] & w_data1808w[2..2]), (w_anode1966w[1..1] & (! w_data1808w[1..1])), (w_anode1966w[0..0] & w_data1808w[0..0]), w_anode1908w[1..1]);
	w_anode1976w[] = ( (w_anode1976w[2..2] & w_data1808w[2..2]), (w_anode1976w[1..1] & w_data1808w[1..1]), (w_anode1976w[0..0] & (! w_data1808w[0..0])), w_anode1908w[1..1]);
	w_anode1986w[] = ( (w_anode1986w[2..2] & w_data1808w[2..2]), (w_anode1986w[1..1] & w_data1808w[1..1]), (w_anode1986w[0..0] & w_data1808w[0..0]), w_anode1908w[1..1]);
	w_data1808w[2..0] = data_wire[2..0];
END;
--VALID FILE
